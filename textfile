Ideas:


2D, 

**Mouvement : Jump, walk (all directions), 

**Map/level

Add ons: Trampoline, spikes, obstacles,, platform


Terrain : Normal, ice, grass
-> affect the move
Terrain : x, y (position)
    IceTerrain OR type = ice;


Stars : to catch  -> score



Class SDL{ // main
Handle Keyboard : left, right, up // To see how it works

Menu start/quit

update_environment() : update the location of the monsters
update_sdl() : that change displayed

move(input keyboard, output position, bool hasDied) //
{
    Look in the environment 
    if(monster)
        player.decreaseLife()
}

main(){
Loop
    Player can move
    
        // to think: to follow the player, or change the background when the player go out of                                 bound
    update_sdl()
    update_environment()
    update_sdl()
    
}





}

Class for all the add ons

Level
    : vector <Terrain>  terrains
    ; vectors <Monters*> monsters
    : vectors<stars> stars // something to catch 
    terrain: Matrix  1/0 if ground or background (to expand if ice…)





    



Class Character
  - coordinate , dimension
  + move(toCoordinate)
  
  
  





Class Monster (to avoid) base class : Character

-speed  -> it will be equivalent of the number of pixels it will move
-positionA // to see
-positionB (move from a to b at the variable speed) // to see 

- last move (left/right) // the monster keep the direction until it is stuck. Change the direction if stuck
→ child classes : type



Class Player{ 
Score
Location (x, y) // the foot of the image
nbLifes

} ?







TODO :
[ ] Search image Terrain, add ons, player
[ ]  how to do ice ….



